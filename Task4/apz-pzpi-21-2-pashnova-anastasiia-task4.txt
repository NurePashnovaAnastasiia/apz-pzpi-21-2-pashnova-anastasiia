1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ
1.1	Мета роботи


Метою даної лабораторної роботи є розробка клієнтської частини програмної інформаційної системи для управління закладами харчування «LightServe»; наведення опису прийнятих інженерних рішень; представлення загальної архітектури системи; побудова діаграм.


1.2	Моделювання програмної систем


Аби почати створювати клієнтську частину програмної інформаційної системи для управління закладами харчування «LightServe», варто провести аналіз предметної області. Отже, за допомогою програмої інформаційної системи «LightServe», користувачі, а саме власник закладу харчування зможе авторизуватись в системі, а також додавати, видаляти, змінювати та переглядати інформацію щодо таких сутностей, як: заклад, робітники в закладі, меню, страви, столики. Також користувачем даної системи є відвідувач закладу харчування, який зможе зареєструватися і в подальшому авторизуватись в системі, а також переглядати меню, страви, оформлювати замовлення та переглядати наявність вільних столиків у закладах.
Відповідно до наведеного вище аналізу, було створено діаграми Use Case для користувачів: власника (див. рис. А.1) та відвідувача закладу харчування (див. рис. А.2). 


1.3	Взаємодія між частинами системи


Клієнтська частина буде взаємодіяти з серверною частиною програмної системи за допомогою запитів HTTP. Запити HTTP, які буде надсилати клієнт, включатимуть різноманітні дії, такі як отримання інформації, надсилання даних для обробки чи виконання конкретного завдання. Було створено діаграму компонентів (див. рис А.3), аби краще зрозуміти архітектурну структуру та взаємозв'язок між різними компонентами програмної системи. На діаграмі компонентів будуть відображені основні модулі, які складають клієнтську частину системи, а також їхні взаємодії.


2	ПРОГРАМНА РЕАЛІЗАЦІЯ КЛІЄНТСЬКОЇ ЧАСТИНИ
2.1	Архітектура клієнтської частини


Клієнтська частина програми була розроблена на мові програмування C# з використанням технології розробки ASP.NET MVC. У цій архітектурі моделі представлені класами, які раніше використовувалися у серверній частині, такі як класи об'єктів (заклад харчування, відвідувач, страва, меню, замовлення, деталі замовлення, власник, столик, робітник).
В якості представлення (View) використовуються стандартні HTML-файли, в яких поєднано HTML та C# (розширення .cshtml). Для реалізації дизайну використовується бібліотека Bootstrap. Контролери, які є файли з кодом C#, використовуються для створення та відображення сторінок, а також для здійснення запитів до серверної частини програмної системи.
Система підтримує локалізацію англійською та українською мовами. Для цього було створено два файли ресурсів, які містять текст у вигляді ключ-значення для використання відповідного мовного варіанту.
Також було створено ще одну діаграму, а саме діаграму станів для користувачів програмної інформаційної системи «LightServe», а саме: власника (див. рис. А.4) та відвідувача закладу харчування (див. рис. А.5). Ця діаграма визначає можливі стани системи, події, що можуть спричинити переходи між цими станами, і дії, які відбуваються в кожному стані.
Також було створено діаграму діяльностей для авторизації (див. рис. А.6) та роботи власника у системі (див. рис. А.7), яка візуально відображає послідовність операцій та взаємодію між різними етапами процесу аутентифікації та використання функціоналу системи.


2.2	Програмна розробка системи


Розглянемо реалізацію деяких моментів у функціональності серверної частини. Реєстрація відвідувача закладу харчування відбувається з використанням його e-mail, який є унікальним для кожного та пароля. Спочатку необхідно перевірити, чи не ввів користувач пустих рядків у поля вводу (див Б.1, рядок 3 ). Далі йде взаємодія з сервером: створюється POST запит до API для реєстрації відвідувача (див Б.1, рядки 5 – 11). Після отримання відповіді від сервера, йде обробка запиту, оскільки дані повертаються у форматі JSON. Далі перевіряється яка відповідь прийшла від сервера(див Б.1, рядки 12 – 24), якщо запит був успішним, то обробляється успішний відгук, включаючи оновлення інформації про відвідувача та перенаправлення на домашню сторінку. У випадку невдачі відгуку обробляються повідомлення про помилку. Якщо була помилка при валідації, тоді повертається вид реєстрації з передачею моделі. Це дозволяє виводити повідомлення про помилки користувачеві та зберігати введені дані.
Авторизація відвідувача закладу харчування відбувається з використанням його e-mail, який є унікальним для кожного та пароля. Спочатку необхідно перевірити, чи не ввів користувач пустих рядків у поля вводу (див Б.2, рядок 3). Далі йде взаємодія з сервером: використовується HttpClient для взаємодії з сервером; здійснюється POST-запит до API для авторизації відвідувача, передаючи дані у форматі JSON (див Б.2, рядки 5 – 19). Далі перевіряється яка відповідь прийшла від сервера (див Б.2, рядки 21 – 35), якщо запит був успішним, то обробляється успішний відгук, включаючи оновлення інформації про відвідувача та перенаправлення на домашню сторінку. У випадку невдачі відгуку обробляються повідомлення про помилку. Якщо була помилка при валідації, тоді повертається вид авторизації з передачею моделі (див Б.2, рядок 38). Це дозволяє виводити повідомлення про помилки користувачеві та зберігати введені дані.


3 ВИСНОВКИ


Впродовж цієї лабораторної роботи було розроблено клієнтську частину програмної інформаційної системи для управління закладами харчування «LightServe»; наведено опис прийнятих інженерних рішень; представлено загальну архітектури системи; побудовано діаграми.
Посилання на програмний код: https://github.com/NurePashnovaAnastasiia/apz-pzpi-21-2-pashnova-anastasiia/tree/main/Task4
